/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/5.1/userguide/tutorial_java_projects.html
 */

plugins {
    // Apply the java plugin to add support for Java
    id 'java'

    // Apply the application plugin to add support for building an application
    id 'application'
}

repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

ext.lib = project.hasProperty('lib') ? project.getProperty('lib') : '../libs/jaccard.jar'
ext.ruleFile = project.hasProperty('ruleFile') ? project.getProperty('ruleFile') : './src/main/simulation.rule'

dependencies {
    // This dependency is found on compile classpath of this component and consumers.
    compile 'com.google.guava:guava:26.0-jre'
    compile 'org.siani.javafmi:fmu-wrapper:+'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'
    compile files(lib)
}

ext.rule = [
        packagename: "rule",
        destinationDir: "./src/main/java/"
]

task(runRuleCompiler){
    inputs.file(rule.ruleSource)
    outputs.file(rule.destinationDir + "/" + rule.packagename + "/Executor.java")

    javaexec {
        main="-jar";
        args = [
                lib, "compile", "-o", rule.destinationDir, "-p", rule.packagename, "-lib" , ruleFile
        ]
    }
}

compileJava{
    dependsOn runRuleCompiler
}

task fatJar(type: Jar) {
    manifest {
        attributes('Main-Class': 'ModelicaSimulation.App')
    }
    baseName = project.name + '-all'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

// Define the main class for the application
mainClassName = 'ModelicaSimulation.App'
